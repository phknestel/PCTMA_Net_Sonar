import open3d as o3d
import numpy as np

def remove_input_points_from_output(input_file, output_file, result_file):
    # Load the input and output point clouds
    input_pcd = o3d.io.read_point_cloud(input_file)
    output_pcd = o3d.io.read_point_cloud(output_file)

    # Convert to numpy arrays for easier manipulation
    input_points = np.asarray(input_pcd.points)
    output_points = np.asarray(output_pcd.points)

    # Find and remove points from the output that are in the input
    unique_output_points = np.array([pt for pt in output_points if not any(np.all(pt == input_points, axis=1))])

    # Create a new point cloud for the result
    result_pcd = o3d.geometry.PointCloud()
    result_pcd.points = o3d.utility.Vector3dVector(unique_output_points)

    # Save the result point cloud
    o3d.io.write_point_cloud(result_file, result_pcd)

# Example usage
input_ply_file = 'Pretrain_Hyper_Denoise/ground_114_pc.ply'  
output_ply_file = 'Pretrain_Hyper_Denoise/ground_114_pc_recon.ply' 
result_ply_file = 'del_input_noise_testfile.ply'  

remove_input_points_from_output(input_ply_file, output_ply_file, result_ply_file)
